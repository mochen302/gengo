// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: common.proto

// +k8s:deepcopy-gen=package
package common

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EGameServer_Proto int32

const (
	EGameServer_Proto_NONE             EGameServer_Proto = 0
	EGameServer_Proto_START_GAMESERVER EGameServer_Proto = 1
	EGameServer_Proto_JOIN_GAMESERVER  EGameServer_Proto = 2
	EGameServer_Proto_NOTI_DROP_MATCH  EGameServer_Proto = 3
)

// Enum value maps for EGameServer_Proto.
var (
	EGameServer_Proto_name = map[int32]string{
		0: "Proto_NONE",
		1: "Proto_START_GAMESERVER",
		2: "Proto_JOIN_GAMESERVER",
		3: "Proto_NOTI_DROP_MATCH",
	}
	EGameServer_Proto_value = map[string]int32{
		"Proto_NONE":             0,
		"Proto_START_GAMESERVER": 1,
		"Proto_JOIN_GAMESERVER":  2,
		"Proto_NOTI_DROP_MATCH":  3,
	}
)

func (x EGameServer_Proto) Enum() *EGameServer_Proto {
	p := new(EGameServer_Proto)
	*p = x
	return p
}

func (x EGameServer_Proto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServer_Proto) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (EGameServer_Proto) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x EGameServer_Proto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServer_Proto.Descriptor instead.
func (EGameServer_Proto) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20, 0}
}

type EGameServer_ServerStatus int32

const (
	EGameServer_ServerStatus_NONE       EGameServer_ServerStatus = 0
	EGameServer_ServerStatus_RUNNING    EGameServer_ServerStatus = 1
	EGameServer_ServerStatus_SOFTCLOSED EGameServer_ServerStatus = 2
	EGameServer_ServerStatus_DOWN       EGameServer_ServerStatus = 3
	EGameServer_ServerStatus_OVERLOADED EGameServer_ServerStatus = 4
)

// Enum value maps for EGameServer_ServerStatus.
var (
	EGameServer_ServerStatus_name = map[int32]string{
		0: "ServerStatus_NONE",
		1: "ServerStatus_RUNNING",
		2: "ServerStatus_SOFTCLOSED",
		3: "ServerStatus_DOWN",
		4: "ServerStatus_OVERLOADED",
	}
	EGameServer_ServerStatus_value = map[string]int32{
		"ServerStatus_NONE":       0,
		"ServerStatus_RUNNING":    1,
		"ServerStatus_SOFTCLOSED": 2,
		"ServerStatus_DOWN":       3,
		"ServerStatus_OVERLOADED": 4,
	}
)

func (x EGameServer_ServerStatus) Enum() *EGameServer_ServerStatus {
	p := new(EGameServer_ServerStatus)
	*p = x
	return p
}

func (x EGameServer_ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServer_ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (EGameServer_ServerStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x EGameServer_ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServer_ServerStatus.Descriptor instead.
func (EGameServer_ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20, 1}
}

type EGameServer_ServerType int32

const (
	EGameServer_ServerType_NONE   EGameServer_ServerType = 0
	EGameServer_ServerType_NORMAL EGameServer_ServerType = 1
)

// Enum value maps for EGameServer_ServerType.
var (
	EGameServer_ServerType_name = map[int32]string{
		0: "ServerType_NONE",
		1: "ServerType_NORMAL",
	}
	EGameServer_ServerType_value = map[string]int32{
		"ServerType_NONE":   0,
		"ServerType_NORMAL": 1,
	}
)

func (x EGameServer_ServerType) Enum() *EGameServer_ServerType {
	p := new(EGameServer_ServerType)
	*p = x
	return p
}

func (x EGameServer_ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServer_ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (EGameServer_ServerType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x EGameServer_ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServer_ServerType.Descriptor instead.
func (EGameServer_ServerType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20, 2}
}

type EGameServerManager_Proto int32

const (
	EGameServerManager_Proto_NONE                  EGameServerManager_Proto = 0
	EGameServerManager_Proto_REPORT                EGameServerManager_Proto = 1
	EGameServerManager_Proto_PLAYERLOGIN           EGameServerManager_Proto = 2
	EGameServerManager_Proto_PLAYERLOGOUT          EGameServerManager_Proto = 3
	EGameServerManager_Proto_ENDMATCH              EGameServerManager_Proto = 4
	EGameServerManager_Proto_CUSTOMROOM_MATCHSTATS EGameServerManager_Proto = 5
	EGameServerManager_Proto_UPDATE_INGAMEITEMS    EGameServerManager_Proto = 6
	EGameServerManager_Proto_GS_READY              EGameServerManager_Proto = 7 // GS Resource Ready
	EGameServerManager_Proto_UGC_DEBUG_GS_READY    EGameServerManager_Proto = 8
	EGameServerManager_Proto_GS_START_GAME_READY   EGameServerManager_Proto = 9
	EGameServerManager_Proto_GS_JOIN_READY         EGameServerManager_Proto = 10
	EGameServerManager_Proto_GS_CLOSE_GAME         EGameServerManager_Proto = 11
)

// Enum value maps for EGameServerManager_Proto.
var (
	EGameServerManager_Proto_name = map[int32]string{
		0:  "Proto_NONE",
		1:  "Proto_REPORT",
		2:  "Proto_PLAYERLOGIN",
		3:  "Proto_PLAYERLOGOUT",
		4:  "Proto_ENDMATCH",
		5:  "Proto_CUSTOMROOM_MATCHSTATS",
		6:  "Proto_UPDATE_INGAMEITEMS",
		7:  "Proto_GS_READY",
		8:  "Proto_UGC_DEBUG_GS_READY",
		9:  "Proto_GS_START_GAME_READY",
		10: "Proto_GS_JOIN_READY",
		11: "Proto_GS_CLOSE_GAME",
	}
	EGameServerManager_Proto_value = map[string]int32{
		"Proto_NONE":                  0,
		"Proto_REPORT":                1,
		"Proto_PLAYERLOGIN":           2,
		"Proto_PLAYERLOGOUT":          3,
		"Proto_ENDMATCH":              4,
		"Proto_CUSTOMROOM_MATCHSTATS": 5,
		"Proto_UPDATE_INGAMEITEMS":    6,
		"Proto_GS_READY":              7,
		"Proto_UGC_DEBUG_GS_READY":    8,
		"Proto_GS_START_GAME_READY":   9,
		"Proto_GS_JOIN_READY":         10,
		"Proto_GS_CLOSE_GAME":         11,
	}
)

func (x EGameServerManager_Proto) Enum() *EGameServerManager_Proto {
	p := new(EGameServerManager_Proto)
	*p = x
	return p
}

func (x EGameServerManager_Proto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServerManager_Proto) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (EGameServerManager_Proto) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x EGameServerManager_Proto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServerManager_Proto.Descriptor instead.
func (EGameServerManager_Proto) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21, 0}
}

type EGameServerManager_ErrCode int32

const (
	EGameServerManager_ErrCode_SUSS     EGameServerManager_ErrCode = 0
	EGameServerManager_ErrCode_ROOMFULL EGameServerManager_ErrCode = 8
)

// Enum value maps for EGameServerManager_ErrCode.
var (
	EGameServerManager_ErrCode_name = map[int32]string{
		0: "ErrCode_SUSS",
		8: "ErrCode_ROOMFULL",
	}
	EGameServerManager_ErrCode_value = map[string]int32{
		"ErrCode_SUSS":     0,
		"ErrCode_ROOMFULL": 8,
	}
)

func (x EGameServerManager_ErrCode) Enum() *EGameServerManager_ErrCode {
	p := new(EGameServerManager_ErrCode)
	*p = x
	return p
}

func (x EGameServerManager_ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServerManager_ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (EGameServerManager_ErrCode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x EGameServerManager_ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServerManager_ErrCode.Descriptor instead.
func (EGameServerManager_ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21, 1}
}

type EGameServerManager_HandleGSLoad int32

const (
	EGameServerManager_HandleGSLoad_NONE   EGameServerManager_HandleGSLoad = 0
	EGameServerManager_HandleGSLoad_UPDATE EGameServerManager_HandleGSLoad = 1
	EGameServerManager_HandleGSLoad_DELETE EGameServerManager_HandleGSLoad = 2
)

// Enum value maps for EGameServerManager_HandleGSLoad.
var (
	EGameServerManager_HandleGSLoad_name = map[int32]string{
		0: "HandleGSLoad_NONE",
		1: "HandleGSLoad_UPDATE",
		2: "HandleGSLoad_DELETE",
	}
	EGameServerManager_HandleGSLoad_value = map[string]int32{
		"HandleGSLoad_NONE":   0,
		"HandleGSLoad_UPDATE": 1,
		"HandleGSLoad_DELETE": 2,
	}
)

func (x EGameServerManager_HandleGSLoad) Enum() *EGameServerManager_HandleGSLoad {
	p := new(EGameServerManager_HandleGSLoad)
	*p = x
	return p
}

func (x EGameServerManager_HandleGSLoad) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServerManager_HandleGSLoad) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (EGameServerManager_HandleGSLoad) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x EGameServerManager_HandleGSLoad) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServerManager_HandleGSLoad.Descriptor instead.
func (EGameServerManager_HandleGSLoad) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21, 2}
}

type EGameServerManager_NotifyGameServerType int32

const (
	EGameServerManager_NotifyGameServerType_NONE          EGameServerManager_NotifyGameServerType = 0
	EGameServerManager_NotifyGameServerType_DROP_MATCH    EGameServerManager_NotifyGameServerType = 1
	EGameServerManager_NotifyGameServerType_PUNISH_PLAYER EGameServerManager_NotifyGameServerType = 2
)

// Enum value maps for EGameServerManager_NotifyGameServerType.
var (
	EGameServerManager_NotifyGameServerType_name = map[int32]string{
		0: "NotifyGameServerType_NONE",
		1: "NotifyGameServerType_DROP_MATCH",
		2: "NotifyGameServerType_PUNISH_PLAYER",
	}
	EGameServerManager_NotifyGameServerType_value = map[string]int32{
		"NotifyGameServerType_NONE":          0,
		"NotifyGameServerType_DROP_MATCH":    1,
		"NotifyGameServerType_PUNISH_PLAYER": 2,
	}
)

func (x EGameServerManager_NotifyGameServerType) Enum() *EGameServerManager_NotifyGameServerType {
	p := new(EGameServerManager_NotifyGameServerType)
	*p = x
	return p
}

func (x EGameServerManager_NotifyGameServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGameServerManager_NotifyGameServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (EGameServerManager_NotifyGameServerType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x EGameServerManager_NotifyGameServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EGameServerManager_NotifyGameServerType.Descriptor instead.
func (EGameServerManager_NotifyGameServerType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21, 3}
}

type EMatch_MatchMode int32

const (
	EMatch_MatchMode_NONE   EMatch_MatchMode = 0
	EMatch_MatchMode_CASUAL EMatch_MatchMode = 1
)

// Enum value maps for EMatch_MatchMode.
var (
	EMatch_MatchMode_name = map[int32]string{
		0: "MatchMode_NONE",
		1: "MatchMode_CASUAL",
	}
	EMatch_MatchMode_value = map[string]int32{
		"MatchMode_NONE":   0,
		"MatchMode_CASUAL": 1,
	}
)

func (x EMatch_MatchMode) Enum() *EMatch_MatchMode {
	p := new(EMatch_MatchMode)
	*p = x
	return p
}

func (x EMatch_MatchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMatch_MatchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (EMatch_MatchMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x EMatch_MatchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMatch_MatchMode.Descriptor instead.
func (EMatch_MatchMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22, 0}
}

type EMatch_GameMode int32

const (
	EMatch_GameMode_NONE    EMatch_GameMode = 0
	EMatch_GameMode_CASCUAL EMatch_GameMode = 1
)

// Enum value maps for EMatch_GameMode.
var (
	EMatch_GameMode_name = map[int32]string{
		0: "GameMode_NONE",
		1: "GameMode_CASCUAL",
	}
	EMatch_GameMode_value = map[string]int32{
		"GameMode_NONE":    0,
		"GameMode_CASCUAL": 1,
	}
)

func (x EMatch_GameMode) Enum() *EMatch_GameMode {
	p := new(EMatch_GameMode)
	*p = x
	return p
}

func (x EMatch_GameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMatch_GameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[8].Descriptor()
}

func (EMatch_GameMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[8]
}

func (x EMatch_GameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMatch_GameMode.Descriptor instead.
func (EMatch_GameMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22, 1}
}

type EMatch_GroupMode int32

const (
	EMatch_GroupMode_SOLO EMatch_GroupMode = 0
)

// Enum value maps for EMatch_GroupMode.
var (
	EMatch_GroupMode_name = map[int32]string{
		0: "GroupMode_SOLO",
	}
	EMatch_GroupMode_value = map[string]int32{
		"GroupMode_SOLO": 0,
	}
)

func (x EMatch_GroupMode) Enum() *EMatch_GroupMode {
	p := new(EMatch_GroupMode)
	*p = x
	return p
}

func (x EMatch_GroupMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMatch_GroupMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[9].Descriptor()
}

func (EMatch_GroupMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[9]
}

func (x EMatch_GroupMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMatch_GroupMode.Descriptor instead.
func (EMatch_GroupMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22, 2}
}

type EAccount_PlatformType int32

const (
	EAccount_PlatformType_VISITOR    EAccount_PlatformType = 0
	EAccount_PlatformType_GAS        EAccount_PlatformType = 1
	EAccount_PlatformType_BEETALK    EAccount_PlatformType = 2
	EAccount_PlatformType_GAFACEBOOK EAccount_PlatformType = 3
	EAccount_PlatformType_GAGUEST    EAccount_PlatformType = 4
	EAccount_PlatformType_VK         EAccount_PlatformType = 5
	EAccount_PlatformType_FACEBOOK   EAccount_PlatformType = 6
	EAccount_PlatformType_HUAWEI     EAccount_PlatformType = 7
	EAccount_PlatformType_GOOGLE     EAccount_PlatformType = 8
	EAccount_PlatformType_XXX        EAccount_PlatformType = 9
	EAccount_PlatformType_APPLE      EAccount_PlatformType = 10
	EAccount_PlatformType_TWITTER    EAccount_PlatformType = 11
	EAccount_PlatformType_ASTRENA    EAccount_PlatformType = 12
	// we use 100 to identify deleted account
	EAccount_PlatformType_DELETE         EAccount_PlatformType = 100
	EAccount_PlatformType_CHANGE_ACCOUNT EAccount_PlatformType = 101
)

// Enum value maps for EAccount_PlatformType.
var (
	EAccount_PlatformType_name = map[int32]string{
		0:   "PlatformType_VISITOR",
		1:   "PlatformType_GAS",
		2:   "PlatformType_BEETALK",
		3:   "PlatformType_GAFACEBOOK",
		4:   "PlatformType_GAGUEST",
		5:   "PlatformType_VK",
		6:   "PlatformType_FACEBOOK",
		7:   "PlatformType_HUAWEI",
		8:   "PlatformType_GOOGLE",
		9:   "PlatformType_XXX",
		10:  "PlatformType_APPLE",
		11:  "PlatformType_TWITTER",
		12:  "PlatformType_ASTRENA",
		100: "PlatformType_DELETE",
		101: "PlatformType_CHANGE_ACCOUNT",
	}
	EAccount_PlatformType_value = map[string]int32{
		"PlatformType_VISITOR":        0,
		"PlatformType_GAS":            1,
		"PlatformType_BEETALK":        2,
		"PlatformType_GAFACEBOOK":     3,
		"PlatformType_GAGUEST":        4,
		"PlatformType_VK":             5,
		"PlatformType_FACEBOOK":       6,
		"PlatformType_HUAWEI":         7,
		"PlatformType_GOOGLE":         8,
		"PlatformType_XXX":            9,
		"PlatformType_APPLE":          10,
		"PlatformType_TWITTER":        11,
		"PlatformType_ASTRENA":        12,
		"PlatformType_DELETE":         100,
		"PlatformType_CHANGE_ACCOUNT": 101,
	}
)

func (x EAccount_PlatformType) Enum() *EAccount_PlatformType {
	p := new(EAccount_PlatformType)
	*p = x
	return p
}

func (x EAccount_PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAccount_PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[10].Descriptor()
}

func (EAccount_PlatformType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[10]
}

func (x EAccount_PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EAccount_PlatformType.Descriptor instead.
func (EAccount_PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23, 0}
}

// store by bit in accountInfo
type EAccount_Role int32

const (
	EAccount_Role_NONE        EAccount_Role = 0
	EAccount_Role_GM          EAccount_Role = 1
	EAccount_Role_CONTESTANT  EAccount_Role = 2 // for room
	EAccount_Role_STREAMER    EAccount_Role = 4
	EAccount_Role_REPLAY      EAccount_Role = 8
	EAccount_Role_ROOMMASTER  EAccount_Role = 16
	EAccount_Role_ROOMPARTNER EAccount_Role = 32
	EAccount_Role_PERSONAGE   EAccount_Role = 64  // for Celebrity
	EAccount_Role_COMPANY     EAccount_Role = 128 // for Celebrity
	EAccount_Role_PREPARATION EAccount_Role = 256 // for Celebrity
	EAccount_Role_UGC         EAccount_Role = 512
)

// Enum value maps for EAccount_Role.
var (
	EAccount_Role_name = map[int32]string{
		0:   "Role_NONE",
		1:   "Role_GM",
		2:   "Role_CONTESTANT",
		4:   "Role_STREAMER",
		8:   "Role_REPLAY",
		16:  "Role_ROOMMASTER",
		32:  "Role_ROOMPARTNER",
		64:  "Role_PERSONAGE",
		128: "Role_COMPANY",
		256: "Role_PREPARATION",
		512: "Role_UGC",
	}
	EAccount_Role_value = map[string]int32{
		"Role_NONE":        0,
		"Role_GM":          1,
		"Role_CONTESTANT":  2,
		"Role_STREAMER":    4,
		"Role_REPLAY":      8,
		"Role_ROOMMASTER":  16,
		"Role_ROOMPARTNER": 32,
		"Role_PERSONAGE":   64,
		"Role_COMPANY":     128,
		"Role_PREPARATION": 256,
		"Role_UGC":         512,
	}
)

func (x EAccount_Role) Enum() *EAccount_Role {
	p := new(EAccount_Role)
	*p = x
	return p
}

func (x EAccount_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAccount_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[11].Descriptor()
}

func (EAccount_Role) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[11]
}

func (x EAccount_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EAccount_Role.Descriptor instead.
func (EAccount_Role) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23, 1}
}

type EAccount_LoginType int32

const (
	EAccount_LoginType_NORMAL           EAccount_LoginType = 0
	EAccount_LoginType_DEBUG_ACCOUNT_ID EAccount_LoginType = 1
	EAccount_LoginType_DEBUG_NICKNAME   EAccount_LoginType = 2
)

// Enum value maps for EAccount_LoginType.
var (
	EAccount_LoginType_name = map[int32]string{
		0: "LoginType_NORMAL",
		1: "LoginType_DEBUG_ACCOUNT_ID",
		2: "LoginType_DEBUG_NICKNAME",
	}
	EAccount_LoginType_value = map[string]int32{
		"LoginType_NORMAL":           0,
		"LoginType_DEBUG_ACCOUNT_ID": 1,
		"LoginType_DEBUG_NICKNAME":   2,
	}
)

func (x EAccount_LoginType) Enum() *EAccount_LoginType {
	p := new(EAccount_LoginType)
	*p = x
	return p
}

func (x EAccount_LoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAccount_LoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[12].Descriptor()
}

func (EAccount_LoginType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[12]
}

func (x EAccount_LoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EAccount_LoginType.Descriptor instead.
func (EAccount_LoginType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23, 2}
}

type ECreatePlayer_ErrCode int32

const (
	ECreatePlayer_ErrCode_NORMAL           ECreatePlayer_ErrCode = 0
	ECreatePlayer_ErrCode_NEGATIVE_GEMS    ECreatePlayer_ErrCode = 1
	ECreatePlayer_ErrCode_CSRANKING_BANNED ECreatePlayer_ErrCode = 2
	ECreatePlayer_ErrCode_RANKING_BANNED   ECreatePlayer_ErrCode = 3
	ECreatePlayer_ErrCode_GROUP_BANNED     ECreatePlayer_ErrCode = 4
)

// Enum value maps for ECreatePlayer_ErrCode.
var (
	ECreatePlayer_ErrCode_name = map[int32]string{
		0: "ErrCode_NORMAL",
		1: "ErrCode_NEGATIVE_GEMS",
		2: "ErrCode_CSRANKING_BANNED",
		3: "ErrCode_RANKING_BANNED",
		4: "ErrCode_GROUP_BANNED",
	}
	ECreatePlayer_ErrCode_value = map[string]int32{
		"ErrCode_NORMAL":           0,
		"ErrCode_NEGATIVE_GEMS":    1,
		"ErrCode_CSRANKING_BANNED": 2,
		"ErrCode_RANKING_BANNED":   3,
		"ErrCode_GROUP_BANNED":     4,
	}
)

func (x ECreatePlayer_ErrCode) Enum() *ECreatePlayer_ErrCode {
	p := new(ECreatePlayer_ErrCode)
	*p = x
	return p
}

func (x ECreatePlayer_ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECreatePlayer_ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[13].Descriptor()
}

func (ECreatePlayer_ErrCode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[13]
}

func (x ECreatePlayer_ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECreatePlayer_ErrCode.Descriptor instead.
func (ECreatePlayer_ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24, 0}
}

type EProtocol_Proto int32

const (
	EProtocol_Proto_NONE  EProtocol_Proto = 0
	EProtocol_INIT        EProtocol_Proto = 1
	EProtocol_HEARTBEAT   EProtocol_Proto = 2
	EProtocol_MATCHMAKING EProtocol_Proto = 3
)

// Enum value maps for EProtocol_Proto.
var (
	EProtocol_Proto_name = map[int32]string{
		0: "Proto_NONE",
		1: "INIT",
		2: "HEARTBEAT",
		3: "MATCHMAKING",
	}
	EProtocol_Proto_value = map[string]int32{
		"Proto_NONE":  0,
		"INIT":        1,
		"HEARTBEAT":   2,
		"MATCHMAKING": 3,
	}
)

func (x EProtocol_Proto) Enum() *EProtocol_Proto {
	p := new(EProtocol_Proto)
	*p = x
	return p
}

func (x EProtocol_Proto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EProtocol_Proto) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[14].Descriptor()
}

func (EProtocol_Proto) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[14]
}

func (x EProtocol_Proto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EProtocol_Proto.Descriptor instead.
func (EProtocol_Proto) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25, 0}
}

type EProtocol_ProtoSize int32

const (
	EProtocol_ProtoSize_NONE        EProtocol_ProtoSize = 0
	EProtocol_MAXPACKETSIZE         EProtocol_ProtoSize = 20480
	EProtocol_MAXMTPPACKETSIZE      EProtocol_ProtoSize = 10240   //1024*10
	EProtocol_MAXUGCDEBUGPACKETSIZE EProtocol_ProtoSize = 1048576 //1024*1024
)

// Enum value maps for EProtocol_ProtoSize.
var (
	EProtocol_ProtoSize_name = map[int32]string{
		0:       "ProtoSize_NONE",
		20480:   "MAXPACKETSIZE",
		10240:   "MAXMTPPACKETSIZE",
		1048576: "MAXUGCDEBUGPACKETSIZE",
	}
	EProtocol_ProtoSize_value = map[string]int32{
		"ProtoSize_NONE":        0,
		"MAXPACKETSIZE":         20480,
		"MAXMTPPACKETSIZE":      10240,
		"MAXUGCDEBUGPACKETSIZE": 1048576,
	}
)

func (x EProtocol_ProtoSize) Enum() *EProtocol_ProtoSize {
	p := new(EProtocol_ProtoSize)
	*p = x
	return p
}

func (x EProtocol_ProtoSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EProtocol_ProtoSize) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[15].Descriptor()
}

func (EProtocol_ProtoSize) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[15]
}

func (x EProtocol_ProtoSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EProtocol_ProtoSize.Descriptor instead.
func (EProtocol_ProtoSize) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25, 1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type PlayerLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ConnId    uint64 `protobuf:"varint,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
}

func (x *PlayerLogoutReq) Reset() {
	*x = PlayerLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLogoutReq) ProtoMessage() {}

func (x *PlayerLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLogoutReq.ProtoReflect.Descriptor instead.
func (*PlayerLogoutReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerLogoutReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlayerLogoutReq) GetConnId() uint64 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

// +k8s:deepcopy-gen:golang.garena.com/astrena/astrena-services/internal/protocol/common.Interface
// +k8s:deepcopy-gen:golang.garena.com/astrena/astrena-services/internal/protocol/common.AliasInterface
// +k8s:deepcopy-gen:golang.garena.com/astrena/astrena-services/internal/protocol/common.AliasAliasInterface
type MatchClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpsdkStr         string `protobuf:"bytes,1,opt,name=tpsdk_str,json=tpsdkStr,proto3" json:"tpsdk_str,omitempty"`
	StartTime        uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FileException    []byte `protobuf:"bytes,3,opt,name=file_exception,json=fileException,proto3" json:"file_exception,omitempty"`
	LibResult        []byte `protobuf:"bytes,4,opt,name=lib_result,json=libResult,proto3" json:"lib_result,omitempty"`
	ExceptionCount   uint32 `protobuf:"varint,5,opt,name=exception_count,json=exceptionCount,proto3" json:"exception_count,omitempty"`
	ScanCount        uint32 `protobuf:"varint,6,opt,name=scan_count,json=scanCount,proto3" json:"scan_count,omitempty"`
	NativeResult     []byte `protobuf:"bytes,7,opt,name=native_result,json=nativeResult,proto3" json:"native_result,omitempty"`
	ClientVersion    string `protobuf:"bytes,8,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ChannelType      uint32 `protobuf:"varint,9,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`
	ArchitectureType uint32 `protobuf:"varint,10,opt,name=architecture_type,json=architectureType,proto3" json:"architecture_type,omitempty"`
}

func (x *MatchClientInfo) Reset() {
	*x = MatchClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchClientInfo) ProtoMessage() {}

func (x *MatchClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchClientInfo.ProtoReflect.Descriptor instead.
func (*MatchClientInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *MatchClientInfo) GetTpsdkStr() string {
	if x != nil {
		return x.TpsdkStr
	}
	return ""
}

func (x *MatchClientInfo) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MatchClientInfo) GetFileException() []byte {
	if x != nil {
		return x.FileException
	}
	return nil
}

func (x *MatchClientInfo) GetLibResult() []byte {
	if x != nil {
		return x.LibResult
	}
	return nil
}

func (x *MatchClientInfo) GetExceptionCount() uint32 {
	if x != nil {
		return x.ExceptionCount
	}
	return 0
}

func (x *MatchClientInfo) GetScanCount() uint32 {
	if x != nil {
		return x.ScanCount
	}
	return 0
}

func (x *MatchClientInfo) GetNativeResult() []byte {
	if x != nil {
		return x.NativeResult
	}
	return nil
}

func (x *MatchClientInfo) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *MatchClientInfo) GetChannelType() uint32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *MatchClientInfo) GetArchitectureType() uint32 {
	if x != nil {
		return x.ArchitectureType
	}
	return 0
}

type AccountMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	LockRegion string `protobuf:"bytes,3,opt,name=lock_region,json=lockRegion,proto3" json:"lock_region,omitempty"`
	Level      uint32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	AvatarId   uint32 `protobuf:"varint,5,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
}

func (x *AccountMatchInfo) Reset() {
	*x = AccountMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMatchInfo) ProtoMessage() {}

func (x *AccountMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMatchInfo.ProtoReflect.Descriptor instead.
func (*AccountMatchInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *AccountMatchInfo) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountMatchInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccountMatchInfo) GetLockRegion() string {
	if x != nil {
		return x.LockRegion
	}
	return ""
}

func (x *AccountMatchInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AccountMatchInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type Gameserver2ServicePkg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd       EGameServerManager_Proto `protobuf:"varint,1,opt,name=cmd,proto3,enum=common.EGameServerManager_Proto" json:"cmd,omitempty"`
	MatchMode uint32                   `protobuf:"varint,2,opt,name=match_mode,json=matchMode,proto3" json:"match_mode,omitempty"`
	AccountId uint64                   `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// uint64 real_group_id = 4;
	// uint64 auto_group_id = 5;
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	// uint32 room_id = 7;
	GroupId    uint64 `protobuf:"varint,8,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	PreGroupId uint64 `protobuf:"varint,9,opt,name=pre_group_id,json=preGroupId,proto3" json:"pre_group_id,omitempty"`
	MatchId    uint64 `protobuf:"varint,10,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"` //gs room id
	RoomId     uint64 `protobuf:"varint,11,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`    //for workshop room
	SentTs     int64  `protobuf:"varint,12,opt,name=sent_ts,json=sentTs,proto3" json:"sent_ts,omitempty"`    // timestamp of this msg sent from gs
}

func (x *Gameserver2ServicePkg) Reset() {
	*x = Gameserver2ServicePkg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gameserver2ServicePkg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gameserver2ServicePkg) ProtoMessage() {}

func (x *Gameserver2ServicePkg) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gameserver2ServicePkg.ProtoReflect.Descriptor instead.
func (*Gameserver2ServicePkg) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Gameserver2ServicePkg) GetCmd() EGameServerManager_Proto {
	if x != nil {
		return x.Cmd
	}
	return EGameServerManager_Proto_NONE
}

func (x *Gameserver2ServicePkg) GetMatchMode() uint32 {
	if x != nil {
		return x.MatchMode
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Gameserver2ServicePkg) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetPreGroupId() uint64 {
	if x != nil {
		return x.PreGroupId
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Gameserver2ServicePkg) GetSentTs() int64 {
	if x != nil {
		return x.SentTs
	}
	return 0
}

type MatchPrepareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    uint64           `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname     string           `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level        uint32           `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	AvatarId     uint32           `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	MatchId      uint64           `protobuf:"varint,5,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	WaitJoinTime uint32           `protobuf:"varint,6,opt,name=wait_join_time,json=waitJoinTime,proto3" json:"wait_join_time,omitempty"`
	LockRegion   string           `protobuf:"bytes,7,opt,name=lock_region,json=lockRegion,proto3" json:"lock_region,omitempty"`
	NotiRegion   string           `protobuf:"bytes,8,opt,name=noti_region,json=notiRegion,proto3" json:"noti_region,omitempty"`
	MatchMode    EMatch_MatchMode `protobuf:"varint,9,opt,name=match_mode,json=matchMode,proto3,enum=common.EMatch_MatchMode" json:"match_mode,omitempty"`
	MapId        uint32           `protobuf:"varint,10,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	GameMode     EMatch_GameMode  `protobuf:"varint,11,opt,name=game_mode,json=gameMode,proto3,enum=common.EMatch_GameMode" json:"game_mode,omitempty"`
}

func (x *MatchPrepareInfo) Reset() {
	*x = MatchPrepareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPrepareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPrepareInfo) ProtoMessage() {}

func (x *MatchPrepareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPrepareInfo.ProtoReflect.Descriptor instead.
func (*MatchPrepareInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *MatchPrepareInfo) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MatchPrepareInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MatchPrepareInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MatchPrepareInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *MatchPrepareInfo) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *MatchPrepareInfo) GetWaitJoinTime() uint32 {
	if x != nil {
		return x.WaitJoinTime
	}
	return 0
}

func (x *MatchPrepareInfo) GetLockRegion() string {
	if x != nil {
		return x.LockRegion
	}
	return ""
}

func (x *MatchPrepareInfo) GetNotiRegion() string {
	if x != nil {
		return x.NotiRegion
	}
	return ""
}

func (x *MatchPrepareInfo) GetMatchMode() EMatch_MatchMode {
	if x != nil {
		return x.MatchMode
	}
	return EMatch_MatchMode_NONE
}

func (x *MatchPrepareInfo) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *MatchPrepareInfo) GetGameMode() EMatch_GameMode {
	if x != nil {
		return x.GameMode
	}
	return EMatch_GameMode_NONE
}

type GSPrepareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMode            EMatch_MatchMode       `protobuf:"varint,1,opt,name=match_mode,json=matchMode,proto3,enum=common.EMatch_MatchMode" json:"match_mode,omitempty"`
	GameMode             EMatch_GameMode        `protobuf:"varint,2,opt,name=game_mode,json=gameMode,proto3,enum=common.EMatch_GameMode" json:"game_mode,omitempty"`
	MapId                uint32                 `protobuf:"varint,3,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	MatchId              uint64                 `protobuf:"varint,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	GsPlayerPrepareInfos []*GSPlayerPrepareInfo `protobuf:"bytes,5,rep,name=gs_player_prepare_infos,json=gsPlayerPrepareInfos,proto3" json:"gs_player_prepare_infos,omitempty"`
}

func (x *GSPrepareInfo) Reset() {
	*x = GSPrepareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSPrepareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSPrepareInfo) ProtoMessage() {}

func (x *GSPrepareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSPrepareInfo.ProtoReflect.Descriptor instead.
func (*GSPrepareInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *GSPrepareInfo) GetMatchMode() EMatch_MatchMode {
	if x != nil {
		return x.MatchMode
	}
	return EMatch_MatchMode_NONE
}

func (x *GSPrepareInfo) GetGameMode() EMatch_GameMode {
	if x != nil {
		return x.GameMode
	}
	return EMatch_GameMode_NONE
}

func (x *GSPrepareInfo) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *GSPrepareInfo) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *GSPrepareInfo) GetGsPlayerPrepareInfos() []*GSPlayerPrepareInfo {
	if x != nil {
		return x.GsPlayerPrepareInfos
	}
	return nil
}

type GSPlayerPrepareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Level      uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	AvatarId   uint32 `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	LockRegion string `protobuf:"bytes,5,opt,name=lock_region,json=lockRegion,proto3" json:"lock_region,omitempty"`
	NotiRegion string `protobuf:"bytes,6,opt,name=noti_region,json=notiRegion,proto3" json:"noti_region,omitempty"`
}

func (x *GSPlayerPrepareInfo) Reset() {
	*x = GSPlayerPrepareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSPlayerPrepareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSPlayerPrepareInfo) ProtoMessage() {}

func (x *GSPlayerPrepareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSPlayerPrepareInfo.ProtoReflect.Descriptor instead.
func (*GSPlayerPrepareInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *GSPlayerPrepareInfo) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GSPlayerPrepareInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GSPlayerPrepareInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GSPlayerPrepareInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *GSPlayerPrepareInfo) GetLockRegion() string {
	if x != nil {
		return x.LockRegion
	}
	return ""
}

func (x *GSPlayerPrepareInfo) GetNotiRegion() string {
	if x != nil {
		return x.NotiRegion
	}
	return ""
}

type MatchPregameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarId  uint32 `protobuf:"varint,3,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
}

func (x *MatchPregameInfo) Reset() {
	*x = MatchPregameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPregameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPregameInfo) ProtoMessage() {}

func (x *MatchPregameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPregameInfo.ProtoReflect.Descriptor instead.
func (*MatchPregameInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *MatchPregameInfo) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MatchPregameInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MatchPregameInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type FindGameServerExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiCntPerGame uint32 `protobuf:"varint,1,opt,name=ai_cnt_per_game,json=aiCntPerGame,proto3" json:"ai_cnt_per_game,omitempty"`
	IsBot        bool   `protobuf:"varint,2,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
}

func (x *FindGameServerExtraInfo) Reset() {
	*x = FindGameServerExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindGameServerExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGameServerExtraInfo) ProtoMessage() {}

func (x *FindGameServerExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGameServerExtraInfo.ProtoReflect.Descriptor instead.
func (*FindGameServerExtraInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *FindGameServerExtraInfo) GetAiCntPerGame() uint32 {
	if x != nil {
		return x.AiCntPerGame
	}
	return 0
}

func (x *FindGameServerExtraInfo) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

type MessageNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Protocol  uint32 `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Ret       uint32 `protobuf:"varint,3,opt,name=ret,proto3" json:"ret,omitempty"`
	Cmd       uint32 `protobuf:"varint,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Content   []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *MessageNotify) Reset() {
	*x = MessageNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageNotify) ProtoMessage() {}

func (x *MessageNotify) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageNotify.ProtoReflect.Descriptor instead.
func (*MessageNotify) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *MessageNotify) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MessageNotify) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *MessageNotify) GetRet() uint32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *MessageNotify) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *MessageNotify) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type MessageNotifySlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*MessageNotify `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *MessageNotifySlice) Reset() {
	*x = MessageNotifySlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageNotifySlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageNotifySlice) ProtoMessage() {}

func (x *MessageNotifySlice) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageNotifySlice.ProtoReflect.Descriptor instead.
func (*MessageNotifySlice) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *MessageNotifySlice) GetMsgs() []*MessageNotify {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type AccountIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AccountIDReq) Reset() {
	*x = AccountIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountIDReq) ProtoMessage() {}

func (x *AccountIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountIDReq.ProtoReflect.Descriptor instead.
func (*AccountIDReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *AccountIDReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type AccountIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AccountIDRes) Reset() {
	*x = AccountIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountIDRes) ProtoMessage() {}

func (x *AccountIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountIDRes.ProtoReflect.Descriptor instead.
func (*AccountIDRes) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *AccountIDRes) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type AccountIDSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIds []uint64 `protobuf:"varint,1,rep,packed,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
}

func (x *AccountIDSlice) Reset() {
	*x = AccountIDSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountIDSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountIDSlice) ProtoMessage() {}

func (x *AccountIDSlice) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountIDSlice.ProtoReflect.Descriptor instead.
func (*AccountIDSlice) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *AccountIDSlice) GetAccountIds() []uint64 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type ExternalIDSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalIds  []string              `protobuf:"bytes,1,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	PlatformType EAccount_PlatformType `protobuf:"varint,2,opt,name=platform_type,json=platformType,proto3,enum=common.EAccount_PlatformType" json:"platform_type,omitempty"`
}

func (x *ExternalIDSlice) Reset() {
	*x = ExternalIDSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalIDSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalIDSlice) ProtoMessage() {}

func (x *ExternalIDSlice) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalIDSlice.ProtoReflect.Descriptor instead.
func (*ExternalIDSlice) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *ExternalIDSlice) GetExternalIds() []string {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *ExternalIDSlice) GetPlatformType() EAccount_PlatformType {
	if x != nil {
		return x.PlatformType
	}
	return EAccount_PlatformType_VISITOR
}

type AccountRegionSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	NotiRegion string `protobuf:"bytes,2,opt,name=noti_region,json=notiRegion,proto3" json:"noti_region,omitempty"`
	LockRegion string `protobuf:"bytes,3,opt,name=lock_region,json=lockRegion,proto3" json:"lock_region,omitempty"`
}

func (x *AccountRegionSlice) Reset() {
	*x = AccountRegionSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegionSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegionSlice) ProtoMessage() {}

func (x *AccountRegionSlice) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegionSlice.ProtoReflect.Descriptor instead.
func (*AccountRegionSlice) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *AccountRegionSlice) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountRegionSlice) GetNotiRegion() string {
	if x != nil {
		return x.NotiRegion
	}
	return ""
}

func (x *AccountRegionSlice) GetLockRegion() string {
	if x != nil {
		return x.LockRegion
	}
	return ""
}

type OpenIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId string `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
}

func (x *OpenIDReq) Reset() {
	*x = OpenIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIDReq) ProtoMessage() {}

func (x *OpenIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIDReq.ProtoReflect.Descriptor instead.
func (*OpenIDReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *OpenIDReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type NicknameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *NicknameReq) Reset() {
	*x = NicknameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicknameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicknameReq) ProtoMessage() {}

func (x *NicknameReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicknameReq.ProtoReflect.Descriptor instead.
func (*NicknameReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *NicknameReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type MatchIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *MatchIDReq) Reset() {
	*x = MatchIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchIDReq) ProtoMessage() {}

func (x *MatchIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchIDReq.ProtoReflect.Descriptor instead.
func (*MatchIDReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *MatchIDReq) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type EGameServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EGameServer) Reset() {
	*x = EGameServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EGameServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EGameServer) ProtoMessage() {}

func (x *EGameServer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EGameServer.ProtoReflect.Descriptor instead.
func (*EGameServer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

type EGameServerManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EGameServerManager) Reset() {
	*x = EGameServerManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EGameServerManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EGameServerManager) ProtoMessage() {}

func (x *EGameServerManager) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EGameServerManager.ProtoReflect.Descriptor instead.
func (*EGameServerManager) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

type EMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EMatch) Reset() {
	*x = EMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMatch) ProtoMessage() {}

func (x *EMatch) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMatch.ProtoReflect.Descriptor instead.
func (*EMatch) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

type EAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EAccount) Reset() {
	*x = EAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EAccount) ProtoMessage() {}

func (x *EAccount) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EAccount.ProtoReflect.Descriptor instead.
func (*EAccount) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

type ECreatePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECreatePlayer) Reset() {
	*x = ECreatePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECreatePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECreatePlayer) ProtoMessage() {}

func (x *ECreatePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECreatePlayer.ProtoReflect.Descriptor instead.
func (*ECreatePlayer) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

type EProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EProtocol) Reset() {
	*x = EProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EProtocol) ProtoMessage() {}

func (x *EProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EProtocol.ProtoReflect.Descriptor instead.
func (*EProtocol) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25}
}

type PlatformRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname     string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	OpenId       string `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Region       string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	AvatarId     uint32 `protobuf:"varint,4,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	PlatformType uint32 `protobuf:"varint,5,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"` //platfrom type,1:gas;2:beetalk,3:garena-facebook,4:garena-gust,5:vk
}

func (x *PlatformRegisterReq) Reset() {
	*x = PlatformRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformRegisterReq) ProtoMessage() {}

func (x *PlatformRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformRegisterReq.ProtoReflect.Descriptor instead.
func (*PlatformRegisterReq) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{26}
}

func (x *PlatformRegisterReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlatformRegisterReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *PlatformRegisterReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PlatformRegisterReq) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *PlatformRegisterReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

type PlatformRegisterRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	AccountId uint64 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *PlatformRegisterRes) Reset() {
	*x = PlatformRegisterRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformRegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformRegisterRes) ProtoMessage() {}

func (x *PlatformRegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformRegisterRes.ProtoReflect.Descriptor instead.
func (*PlatformRegisterRes) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{27}
}

func (x *PlatformRegisterRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlatformRegisterRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PlatformRegisterRes) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PlatformRegisterRes) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x49, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a, 0x0f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x70, 0x73, 0x64, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x70, 0x73, 0x64, 0x6b, 0x53, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x63, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0xb9, 0x02, 0x0a, 0x15, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x6b, 0x67, 0x12, 0x32, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74,
	0x54, 0x73, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04,
	0x08, 0x07, 0x10, 0x08, 0x22, 0x89, 0x03, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x84, 0x02, 0x0a, 0x0d, 0x47, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x17, 0x67, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x53,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x14, 0x67, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x47, 0x53, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22,
	0x6a, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x17, 0x46,
	0x69, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0f, 0x61, 0x69, 0x5f, 0x63, 0x6e, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x61, 0x69, 0x43, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x42, 0x6f, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x3f, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x22, 0x2d, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x78, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x12, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0b, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc5, 0x02, 0x0a,
	0x0b, 0x45, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x4f, 0x46, 0x54, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4f, 0x56,
	0x45, 0x52, 0x4c, 0x4f, 0x41, 0x44, 0x45, 0x44, 0x10, 0x04, 0x22, 0x38, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x01, 0x22, 0xd6, 0x04, 0x0a, 0x12, 0x45, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0xae, 0x02, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x4c, 0x4f,
	0x47, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x45, 0x4e, 0x44, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4d,
	0x41, 0x54, 0x43, 0x48, 0x53, 0x54, 0x41, 0x54, 0x53, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x47, 0x41,
	0x4d, 0x45, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x47, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x07, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x55, 0x47, 0x43, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47,
	0x5f, 0x47, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x47, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x47, 0x53, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x47, 0x53, 0x5f,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x0b, 0x22, 0x31, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x53, 0x55, 0x53, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x08, 0x22,
	0x57, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47, 0x53, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x15, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47, 0x53, 0x4c, 0x6f, 0x61, 0x64, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x47, 0x53, 0x4c, 0x6f, 0x61, 0x64, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47, 0x53, 0x4c, 0x6f, 0x61, 0x64, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x55,
	0x4e, 0x49, 0x53, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x02, 0x22, 0x95, 0x01,
	0x0a, 0x06, 0x45, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x35, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x41, 0x53, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x22,
	0x33, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x55,
	0x41, 0x4c, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53,
	0x4f, 0x4c, 0x4f, 0x10, 0x00, 0x22, 0xd1, 0x05, 0x0a, 0x08, 0x45, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x8d, 0x03, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x41,
	0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x42, 0x45, 0x45, 0x54, 0x41, 0x4c, 0x4b, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x41,
	0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x41, 0x47, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x4b, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f,
	0x4f, 0x4b, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x48, 0x55, 0x41, 0x57, 0x45, 0x49, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x4f,
	0x4f, 0x47, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x58, 0x58, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x50, 0x50,
	0x4c, 0x45, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41,
	0x53, 0x54, 0x52, 0x45, 0x4e, 0x41, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x6f, 0x6c, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x6f,
	0x6c, 0x65, 0x5f, 0x47, 0x4d, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x45, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x45, 0x52, 0x10, 0x04, 0x12,
	0x0f, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x08,
	0x12, 0x13, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x4d, 0x41, 0x53,
	0x54, 0x45, 0x52, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x52, 0x4f,
	0x4f, 0x4d, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x10, 0x20, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x6f, 0x6c, 0x65, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x47, 0x45, 0x10, 0x40, 0x12,
	0x11, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10,
	0x80, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x80, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x52, 0x6f, 0x6c,
	0x65, 0x5f, 0x55, 0x47, 0x43, 0x10, 0x80, 0x04, 0x22, 0x5f, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x4e,
	0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x45, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x47, 0x45, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x5f, 0x43, 0x53, 0x52, 0x41, 0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x41, 0x4e, 0x4e,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f,
	0x52, 0x41, 0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x45,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x4d, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x68, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0d,
	0x4d, 0x41, 0x58, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x80, 0xa0,
	0x01, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x58, 0x4d, 0x54, 0x50, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x80, 0x50, 0x12, 0x1b, 0x0a, 0x15, 0x4d, 0x41, 0x58, 0x55,
	0x47, 0x43, 0x44, 0x45, 0x42, 0x55, 0x47, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x49, 0x5a,
	0x45, 0x10, 0x80, 0x80, 0x40, 0x22, 0xa4, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x13, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x67, 0x61, 0x72, 0x65,
	0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x61, 0x2f, 0x61,
	0x73, 0x74, 0x72, 0x65, 0x6e, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_common_proto_goTypes = []interface{}{
	(EGameServer_Proto)(0),                       // 0: common.EGameServer.Proto
	(EGameServer_ServerStatus)(0),                // 1: common.EGameServer.ServerStatus
	(EGameServer_ServerType)(0),                  // 2: common.EGameServer.ServerType
	(EGameServerManager_Proto)(0),                // 3: common.EGameServerManager.Proto
	(EGameServerManager_ErrCode)(0),              // 4: common.EGameServerManager.ErrCode
	(EGameServerManager_HandleGSLoad)(0),         // 5: common.EGameServerManager.HandleGSLoad
	(EGameServerManager_NotifyGameServerType)(0), // 6: common.EGameServerManager.NotifyGameServerType
	(EMatch_MatchMode)(0),                        // 7: common.EMatch.MatchMode
	(EMatch_GameMode)(0),                         // 8: common.EMatch.GameMode
	(EMatch_GroupMode)(0),                        // 9: common.EMatch.GroupMode
	(EAccount_PlatformType)(0),                   // 10: common.EAccount.PlatformType
	(EAccount_Role)(0),                           // 11: common.EAccount.Role
	(EAccount_LoginType)(0),                      // 12: common.EAccount.LoginType
	(ECreatePlayer_ErrCode)(0),                   // 13: common.ECreatePlayer.ErrCode
	(EProtocol_Proto)(0),                         // 14: common.EProtocol.Proto
	(EProtocol_ProtoSize)(0),                     // 15: common.EProtocol.ProtoSize
	(*Empty)(nil),                                // 16: common.Empty
	(*PlayerLogoutReq)(nil),                      // 17: common.PlayerLogoutReq
	(*MatchClientInfo)(nil),                      // 18: common.MatchClientInfo
	(*AccountMatchInfo)(nil),                     // 19: common.AccountMatchInfo
	(*Gameserver2ServicePkg)(nil),                // 20: common.Gameserver2ServicePkg
	(*MatchPrepareInfo)(nil),                     // 21: common.MatchPrepareInfo
	(*GSPrepareInfo)(nil),                        // 22: common.GSPrepareInfo
	(*GSPlayerPrepareInfo)(nil),                  // 23: common.GSPlayerPrepareInfo
	(*MatchPregameInfo)(nil),                     // 24: common.MatchPregameInfo
	(*FindGameServerExtraInfo)(nil),              // 25: common.FindGameServerExtraInfo
	(*MessageNotify)(nil),                        // 26: common.MessageNotify
	(*MessageNotifySlice)(nil),                   // 27: common.MessageNotifySlice
	(*AccountIDReq)(nil),                         // 28: common.AccountIDReq
	(*AccountIDRes)(nil),                         // 29: common.AccountIDRes
	(*AccountIDSlice)(nil),                       // 30: common.AccountIDSlice
	(*ExternalIDSlice)(nil),                      // 31: common.ExternalIDSlice
	(*AccountRegionSlice)(nil),                   // 32: common.AccountRegionSlice
	(*OpenIDReq)(nil),                            // 33: common.OpenIDReq
	(*NicknameReq)(nil),                          // 34: common.NicknameReq
	(*MatchIDReq)(nil),                           // 35: common.MatchIDReq
	(*EGameServer)(nil),                          // 36: common.EGameServer
	(*EGameServerManager)(nil),                   // 37: common.EGameServerManager
	(*EMatch)(nil),                               // 38: common.EMatch
	(*EAccount)(nil),                             // 39: common.EAccount
	(*ECreatePlayer)(nil),                        // 40: common.ECreatePlayer
	(*EProtocol)(nil),                            // 41: common.EProtocol
	(*PlatformRegisterReq)(nil),                  // 42: common.PlatformRegisterReq
	(*PlatformRegisterRes)(nil),                  // 43: common.PlatformRegisterRes
}
var file_common_proto_depIdxs = []int32{
	3,  // 0: common.Gameserver2ServicePkg.cmd:type_name -> common.EGameServerManager.Proto
	7,  // 1: common.MatchPrepareInfo.match_mode:type_name -> common.EMatch.MatchMode
	8,  // 2: common.MatchPrepareInfo.game_mode:type_name -> common.EMatch.GameMode
	7,  // 3: common.GSPrepareInfo.match_mode:type_name -> common.EMatch.MatchMode
	8,  // 4: common.GSPrepareInfo.game_mode:type_name -> common.EMatch.GameMode
	23, // 5: common.GSPrepareInfo.gs_player_prepare_infos:type_name -> common.GSPlayerPrepareInfo
	26, // 6: common.MessageNotifySlice.msgs:type_name -> common.MessageNotify
	10, // 7: common.ExternalIDSlice.platform_type:type_name -> common.EAccount.PlatformType
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gameserver2ServicePkg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPrepareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSPrepareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSPlayerPrepareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPregameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindGameServerExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageNotifySlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountIDSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalIDSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegionSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicknameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EGameServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EGameServerManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECreatePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformRegisterRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
